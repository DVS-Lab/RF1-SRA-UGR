clear all
close all
clc

currentdir = pwd;
EVDIR = '/ZPOOL/data/projects/rf1-sra-ugr/derivatives/fsl/EVfiles/Empty_EVs/';
output_path = [currentdir '/models/'];

subjects = readtable('newsubs.txt');
subj = table2array(subjects);

cue_social_input = readtable([EVDIR 'cue_social.csv']);
cue_nonsocial_input = readtable([EVDIR 'cue_nonsocial.csv']);
cue_social_low_input = readtable([EVDIR 'cue_social_low.csv']);
cue_social_high_input = readtable([EVDIR 'cue_social_high.csv']);
cue_nonsocial_low_input = readtable([EVDIR 'cue_nonsocial_low.csv']);
cue_nonsocial_high_input = readtable([EVDIR 'cue_nonsocial_high.csv']);

choice_input = readtable([EVDIR 'choice.csv']);
accept_input = readtable([EVDIR 'accept.csv']);
reject_input = readtable([EVDIR 'reject.csv']);

social_choice_input = readtable([EVDIR 'social_choice.csv']);
social_accept_input = readtable([EVDIR 'social_accept.csv']);
social_reject_input = readtable([EVDIR 'social_reject.csv']);
nonsocial_choice_input = readtable([EVDIR 'nonsocial_choice.csv']);
nonsocial_accept_input = readtable([EVDIR 'nonsocial_accept.csv']);
nonsocial_reject_input = readtable([EVDIR 'nonsocial_reject.csv']);

nonsocial_low_input = readtable([EVDIR 'nonsocial_low.csv']);
nonsocial_high_input = readtable([EVDIR 'nonsocial_high.csv']);
social_low_input = readtable([EVDIR 'social_low.csv']);
social_high_input = readtable([EVDIR 'social_high.csv']);

choice_pmod_input = readtable([EVDIR 'choice_pmod.csv']);
accept_pmod_input = readtable([EVDIR 'accept_pmod.csv']);
reject_pmod_input = readtable([EVDIR 'reject_pmod.csv']);

social_choice_pmod_input = readtable([EVDIR 'social_choice_pmod.csv']);
social_accept_pmod_input = readtable([EVDIR 'social_accept_pmod.xls']);
social_reject_pmod_input = readtable([EVDIR 'social_reject_pmod.xls']);
nonsocial_choice_pmod_input = readtable([EVDIR 'nonsocial_choice_pmod.csv']);
nonsocial_accept_pmod_input = readtable([EVDIR 'nonsocial_accept_pmod.xls']);
nonsocial_reject_pmod_input = readtable([EVDIR 'nonsocial_reject_pmod.xls']);

social_accept_high_input = readtable([EVDIR 'social_accept_high.csv']);
social_accept_low_input = readtable([EVDIR 'social_accept_low.csv']);
social_reject_high_input = readtable([EVDIR 'social_reject_high.csv']);
social_reject_low_input = readtable([EVDIR 'social_reject_low.csv']);
nonsocial_accept_high_input = readtable([EVDIR 'nonsocial_accept_high.csv']);
nonsocial_accept_low_input = readtable([EVDIR 'nonsocial_accept_low.csv']);
nonsocial_reject_high_input = readtable([EVDIR 'nonsocial_reject_high.csv']);
nonsocial_reject_low_input = readtable([EVDIR 'nonsocial_reject_low.csv']);

%% Identify all EVs

accept_pmod = []; 
reject_pmod = [];

social_reject_pmod = [];
social_accept_pmod = [];  
nonsocial_accept_pmod = [];
nonsocial_reject_pmod = [];  

% accept_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(accept_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(accept_pmod_input.Var1(vals));
    saverow = [subj(ii),row];
    accept_pmod = [accept_pmod;saverow];
  
end

% Reject_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(reject_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(reject_pmod_input.Var1(vals));
    saverow = [subj(ii),row];
    reject_pmod = [reject_pmod;saverow];
  
end

% social_accept_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(social_accept_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(social_accept_pmod_input.Var1(vals));
    saverow = [subj(ii),row];
    social_accept_pmod = [social_accept_pmod;saverow];
end

% social_reject_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(social_reject_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(social_reject_pmod_input.Var1(vals));
    saverow = [subj(ii),row];
    social_reject_pmod = [social_reject_pmod;saverow];
end

% nonsocial_reject_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(nonsocial_reject_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(nonsocial_reject_input.Var1(vals));
    saverow = [subj(ii),row];
    nonsocial_reject_pmod = [nonsocial_reject_pmod;saverow];
end

% nonsocial_accept_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(nonsocial_accept_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(nonsocial_accept_input.Var1(vals));
    saverow = [subj(ii),row];
    nonsocial_accept_pmod = [nonsocial_accept_pmod;saverow];
end

%%

rm_nonsocial_accept_pmod = [];

[idx] = nonsocial_accept_pmod > 2;
for ii = 1:length(idx)
    row = idx(ii,:);
    if row(2) == 0
        save = nonsocial_accept_pmod(ii,:);
    end
    rm_nonsocial_accept_pmod = [rm_nonsocial_accept_pmod; save];
end



