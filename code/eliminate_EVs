clear all
close all
clc

currentdir = pwd;
EVDIR = '/ZPOOL/data/projects/rf1-sra-ugr/derivatives/fsl/EVfiles/Empty_EVs/';
output_path = [currentdir '/models/'];

subjects = readtable('newsubs.txt');
subj = table2array(subjects);

cue_social_input = readtable([EVDIR 'cue_social.csv']);
cue_nonsocial_input = readtable([EVDIR 'cue_nonsocial.csv']);
cue_social_low_input = readtable([EVDIR 'cue_social_low.csv']);
cue_social_high_input = readtable([EVDIR 'cue_social_high.csv']);
cue_nonsocial_low_input = readtable([EVDIR 'cue_nonsocial_low.csv']);
cue_nonsocial_high_input = readtable([EVDIR 'cue_nonsocial_high.csv']);

choice_input = readtable([EVDIR 'choice.csv']);
accept_input = readtable([EVDIR 'accept.csv']);
reject_input = readtable([EVDIR 'reject.csv']);

social_choice_input = readtable([EVDIR 'social_choice.csv']);
social_accept_input = readtable([EVDIR 'social_accept.csv']);
social_reject_input = readtable([EVDIR 'social_reject.csv']);
nonsocial_choice_input = readtable([EVDIR 'nonsocial_choice.csv']);
nonsocial_accept_input = readtable([EVDIR 'nonsocial_accept.csv']);
nonsocial_reject_input = readtable([EVDIR 'nonsocial_reject.csv']);

nonsocial_low_input = readtable([EVDIR 'nonsocial_low.csv']);
nonsocial_high_input = readtable([EVDIR 'nonsocial_high.csv']);
social_low_input = readtable([EVDIR 'social_low.csv']);
social_high_input = readtable([EVDIR 'social_high.csv']);

choice_pmod_input = readtable([EVDIR 'choice_pmod.csv']);
accept_pmod_input = readtable([EVDIR 'accept_pmod.csv']);
reject_pmod_input = readtable([EVDIR 'reject_pmod.csv']);

social_choice_pmod_input = readtable([EVDIR 'social_choice_pmod.csv']);
social_accept_pmod_input = readtable([EVDIR 'social_accept_pmod.xls']);
social_reject_pmod_input = readtable([EVDIR 'social_reject_pmod.xls']);
nonsocial_choice_pmod_input = readtable([EVDIR 'nonsocial_choice_pmod.csv']);
nonsocial_accept_pmod_input = readtable([EVDIR 'nonsocial_accept_pmod.xls']);
nonsocial_reject_pmod_input = readtable([EVDIR 'nonsocial_reject_pmod.xls']);

social_accept_high_input = readtable([EVDIR 'social_accept_high.csv']);
social_accept_low_input = readtable([EVDIR 'social_accept_low.csv']);
social_reject_high_input = readtable([EVDIR 'social_reject_high.csv']);
social_reject_low_input = readtable([EVDIR 'social_reject_low.csv']);
nonsocial_accept_high_input = readtable([EVDIR 'nonsocial_accept_high.csv']);
nonsocial_accept_low_input = readtable([EVDIR 'nonsocial_accept_low.csv']);
nonsocial_reject_high_input = readtable([EVDIR 'nonsocial_reject_high.csv']);
nonsocial_reject_low_input = readtable([EVDIR 'nonsocial_reject_low.csv']);

%% Identify all EVs

cue_social = [];
cue_nonsocial = [];
cue_social_low = [];
cue_social_high = [];
cue_nonsocial_low = [];
cue_nonsocial_high = [];  

choice = [];   
accept = [];  
reject = []; 

social_choice = []; 
social_accept = [];  
social_reject = [];
nonsocial_choice = [];
nonsocial_accept = []; 
nonsocial_reject = [];  

choice_pmod = [];
accept_pmod = []; 
reject_pmod = [];

social_choice_pmod = [];  
social_reject_pmod = [];
social_accept_pmod = [];  
nonsocial_choice_pmod = []; 
nonsocial_accept_pmod = [];
nonsocial_reject_pmod = [];  

nonsocial_low = []; 
nonsocial_high = []; 
social_low = [];
social_high = [];  
        
social_accept_high = [];  
social_accept_low = [];
social_reject_high = [];
nonsocial_accept_high = []; 
social_reject_low = [];
nonsocial_accept_low = [];
nonsocial_reject_high = [];
nonsocial_reject_low = [];

% social_choice

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(social_choice_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(social_choice_input.Var1(vals));
    saverow = [subj(ii),row];
    social_choice = [social_choice;saverow];
  
end

% nonsocial_choice

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(nonsocial_choice_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(nonsocial_choice_input.Var1(vals));
    saverow = [subj(ii),row];
    nonsocial_choice = [nonsocial_choice;saverow];
  
end

% choice

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(choice_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(choice_input.Var1(vals));
    saverow = [subj(ii),row];
    choice = [choice;saverow];
  
end

% choice_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(choice_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(choice_pmod_input.Var1(vals));
    saverow = [subj(ii),row];
    choice_pmod = [choice_pmod;saverow];
  
end

% accept

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(accept_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(accept_input.Var1(vals));
    saverow = [subj(ii),row];
    accept = [accept;saverow];
  
end

% accept_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(accept_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(accept_pmod_input.Var1(vals));
    saverow = [subj(ii),row];
    accept_pmod = [accept_pmod;saverow];
  
end

% Reject

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(reject_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(reject_input.Var1(vals));
    saverow = [subj(ii),row];
    reject = [reject;saverow];
  
end

% Reject_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(reject_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(reject_pmod_input.Var1(vals));
    saverow = [subj(ii),row];
    reject_pmod = [reject_pmod;saverow];
  
end

% Cue_social

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(cue_social_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(cue_social_input.Var1(vals));
    saverow = [subj(ii),row];
    cue_social = [cue_social;saverow];
  
end

% Cue_nonsocial

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(cue_nonsocial_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(cue_nonsocial_input.Var1(vals));
    saverow = [subj(ii),row];
    cue_nonsocial = [cue_nonsocial;saverow];
  
end

% social_high

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(social_high_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(social_high_input.Var1(vals));
    saverow = [subj(ii),row];
    social_high = [social_high;saverow];
  
end

% nonsocial_high

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(nonsocial_high_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(nonsocial_high_input.Var1(vals));
    saverow = [subj(ii),row];
    nonsocial_high = [nonsocial_high;saverow];
  
end

% social_low

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(social_low_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(social_low_input.Var1(vals));
    saverow = [subj(ii),row];
    social_low = [social_low;saverow];
  
end

% nonsocial_low

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(nonsocial_low_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(nonsocial_low_input.Var1(vals));
    saverow = [subj(ii),row];
    nonsocial_low = [nonsocial_low;saverow];
  
end

% cue_social_high

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(cue_social_high_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(cue_social_high_input.Var1(vals));
    saverow = [subj(ii),row];
    cue_social_high = [cue_social_high;saverow];
  
end

% nonsocial_high

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(cue_nonsocial_high_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(cue_nonsocial_high_input.Var1(vals));
    saverow = [subj(ii),row];
    cue_nonsocial_high = [cue_nonsocial_high;saverow];
  
end

% social_low

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(cue_social_low_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(cue_social_low_input.Var1(vals));
    saverow = [subj(ii),row];
    cue_social_low = [cue_social_low;saverow];
  
end

% nonsocial_low

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(cue_nonsocial_low_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(cue_nonsocial_low_input.Var1(vals));
    saverow = [subj(ii),row];
    cue_nonsocial_low = [cue_nonsocial_low;saverow];
  
end

% social_accept

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(social_accept_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(social_accept_input.Var1(vals));
    saverow = [subj(ii),row];
    social_accept = [social_accept;saverow];
end

% nonsocial_accept

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(nonsocial_accept_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(nonsocial_accept_input.Var1(vals));
    saverow = [subj(ii),row];
    nonsocial_accept = [nonsocial_accept;saverow];
end

% nonsocial_accept

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(nonsocial_reject_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(nonsocial_reject_input.Var1(vals));
    saverow = [subj(ii),row];
    nonsocial_reject = [nonsocial_reject;saverow];
end

% social_reject

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(social_reject_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(social_reject_input.Var1(vals));
    saverow = [subj(ii),row];
    social_reject = [social_reject;saverow];
end

% social_accept_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(social_accept_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(social_accept_pmod_input.Var1(vals));
    saverow = [subj(ii),row];
    social_accept_pmod = [social_accept_pmod;saverow];
end

% social_reject_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(social_reject_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(social_reject_pmod_input.Var1(vals));
    saverow = [subj(ii),row];
    social_reject_pmod = [social_reject_pmod;saverow];
end

% nonsocial_reject_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(nonsocial_reject_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(nonsocial_reject_input.Var1(vals));
    saverow = [subj(ii),row];
    nonsocial_reject_pmod = [nonsocial_reject_pmod;saverow];
end

% nonsocial_accept_pmod

for ii = 1:length(subj)
    sub = num2str(subj(ii));
    indices = contains(nonsocial_accept_pmod_input.Var2,sub);
    indices = +indices; % convert
    vals = find(indices==1);
    row = sum(nonsocial_accept_input.Var1(vals));
    saverow = [subj(ii),row];
    nonsocial_accept_pmod = [nonsocial_accept_pmod;saverow];
end



model1 = [subj, cue_social(:,2), cue_nonsocial(:,2), social_choice(:,2), nonsocial_choice(:,2)];

model1_output = array2table(model1(1:end,:),'VariableNames', {'Subject', 'cue_social', 'cue_nonsocial', 'choice_social','choice_nonsocial'});
name = ('model1.xls');
fileoutput = [output_path, name];
writetable(model1_output, fileoutput); % Save as csv file

model2 = [subj, cue_social_high(:,2), cue_social_low(:,2), cue_nonsocial_high(:,2), cue_nonsocial_low(:,2), social_high(:,2), social_low(:,2), nonsocial_high(:,2), nonsocial_low(:,2)];

model2_output = array2table(model2(1:end,:),'VariableNames', {'Subject', 'cue_social_high', 'cue_social_low', 'cue_nonsocial_high', 'cue_nonsocial_low', 'choice_social_high', 'choice_social_low', 'choice_nonsocial_high', 'choice_nonsocial_low'});
name = ('model2.xls');
fileoutput = [output_path, name];
writetable(model2_output, fileoutput); % Save as csv file

model3 = [subj, cue_social_high(:,2), cue_social_low(:,2), cue_nonsocial_high(:,2), cue_nonsocial_low(:,2), accept(:,2), reject_pmod(:,2), accept_pmod(:,2), reject_pmod(:,2)];

model3_output = array2table(model3(1:end,:),'VariableNames', {'Subject', 'cue_social_high', 'cue_social_low', 'cue_nonsocial_high', 'cue_nonsocial_low', 'accept', 'reject', 'accept_pmod', 'reject_pmod'});
name = ('model3.xls');
fileoutput = [output_path, name];
writetable(model3_output, fileoutput); % Save as csv file

model4 = [subj, cue_social_high(:,2), cue_social_low(:,2), cue_nonsocial_high(:,2), cue_nonsocial_low(:,2), social_accept(:,2), social_reject(:,2), nonsocial_accept(:,2), nonsocial_reject(:,2), social_accept_pmod(:,2), social_reject_pmod(:,2), nonsocial_accept_pmod(:,2), nonsocial_reject_pmod(:,2)];

model4_output = array2table(model4(1:end,:),'VariableNames', {'Subject', 'cue_social_high', 'cue_social_low', 'cue_nonsocial_high', 'cue_nonsocial_low', 'social_accept', 'social_reject', 'nonsocial_accept', 'nonsocial_reject', 'social_accept_pmod', 'social_reject_pmod', 'nonsocial_accept_pmod', 'nonsocial_reject_pmod'});
name = ('model4.xls');
fileoutput = [output_path, name];
writetable(model4_output, fileoutput); % Save as csv file

